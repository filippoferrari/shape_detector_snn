# -*- coding: utf-8 -*-

from src.network_utils.shapes import *


def test_vertical_connections():
    cam_res = 12
    stride = 2
    weight = 1
    delay = 1

    result = [(15, 65, 0.054, 1), (16, 65, 0.054, 1), (17, 65, 0.054, 1), (18, 65, 0.054, 1), (19, 65, 0.054, 1),\
              (27, 65, 0.242, 1), (28, 65, 0.242, 1), (29, 65, 0.242, 1), (30, 65, 0.242, 1), (31, 65, 0.242, 1),\
              (39, 65, 0.3989, 1), (40, 65, 0.3989, 1), (41, 65, 0.3989, 1), (42, 65, 0.3989, 1), (43, 65, 0.3989, 1),\
              (51, 65, 0.242, 1), (52, 65, 0.242, 1), (53, 65, 0.242, 1), (54, 65, 0.242, 1), (55, 65, 0.242, 1),\
              (63, 65, 0.054, 1), (64, 65, 0.054, 1), (65, 65, 0.054, 1), (66, 65, 0.054, 1), (67, 65, 0.054, 1),
              (75, 65, 0.242, 1), (76, 65, 0.242, 1), (77, 65, 0.242, 1), (78, 65, 0.242, 1), (79, 65, 0.242, 1),
              (87, 65, 0.3989, 1), (88, 65, 0.3989, 1), (89, 65, 0.3989, 1), (90, 65, 0.3989, 1), (91, 65, 0.3989, 1),\
              (99, 65, 0.242, 1), (100, 65, 0.242, 1), (101, 65, 0.242, 1), (102, 65, 0.242, 1), (103, 65, 0.242, 1),\
              (111, 65, 0.054, 1), (112, 65, 0.054, 1), (113, 65, 0.054, 1), (114, 65, 0.054, 1), (115, 65, 0.054, 1)]
    t = vert_connections(cam_res, 5, 5, stride, cam_res, weight, delay)
    assert sorted(result) == sorted(t)


def test_horizontal_connections():
    cam_res = 12
    stride = 2
    weight = 1
    delay = 1

    result = [(37, 65, 0.054, 1), (49, 65, 0.054, 1), (61, 65, 0.054, 1), (73, 65, 0.054, 1), (85, 65, 0.054, 1),\
              (38, 65, 0.242, 1), (50, 65, 0.242, 1), (62, 65, 0.242, 1), (74, 65, 0.242, 1), (86, 65, 0.242, 1),\
              (39, 65, 0.3989, 1), (51, 65, 0.3989, 1), (63, 65, 0.3989, 1), (75, 65, 0.3989, 1), (87, 65, 0.3989, 1),\
              (40, 65, 0.242, 1), (52, 65, 0.242, 1), (64, 65, 0.242, 1), (76, 65, 0.242, 1), (88, 65, 0.242, 1),\
              (41, 65, 0.054, 1), (53, 65, 0.054, 1), (65, 65, 0.054, 1), (77, 65, 0.054, 1), (89, 65, 0.054, 1),
              (42, 65, 0.242, 1), (54, 65, 0.242, 1), (66, 65, 0.242, 1), (78, 65, 0.242, 1), (90, 65, 0.242, 1),
              (43, 65, 0.3989, 1), (55, 65, 0.3989, 1), (67, 65, 0.3989, 1), (79, 65, 0.3989, 1), (91, 65, 0.3989, 1),\
              (44, 65, 0.242, 1), (56, 65, 0.242, 1), (68, 65, 0.242, 1), (80, 65, 0.242, 1), (92, 65, 0.242, 1),\
              (45, 65, 0.054, 1), (57, 65, 0.054, 1), (69, 65, 0.054, 1), (81, 65, 0.054, 1), (93, 65, 0.054, 1)]
    t = hor_connections(cam_res, 5, 5, stride, cam_res, weight, delay)
    assert sorted(result) == sorted(t)


def test_left_diagonal_connections():
    cam_res = 12
    stride = 2
    weight = 1
    delay = 1

    result = [(8, 65, 0.054, 1), (21, 65, 0.054, 1), (34, 65, 0.054, 1), (47, 65, 0.054, 1),\
              (6, 65, 0.242, 1), (19, 65, 0.242, 1), (32, 65, 0.242, 1), (45, 65, 0.242, 1), (58, 65, 0.242, 1),\
              (17, 65, 0.3989, 1), (30, 65, 0.3989, 1), (43, 65, 0.3989, 1), (56, 65, 0.3989, 1), (69, 65, 0.3989, 1),\
              (28, 65, 0.242, 1), (41, 65, 0.242, 1), (54, 65, 0.242, 1), (67, 65, 0.242, 1), (80, 65, 0.242, 1),\
              (39, 65, 0.054, 1), (52, 65, 0.054, 1), (65, 65, 0.054, 1), (78, 65, 0.054, 1), (91, 65, 0.054, 1),
              (50, 65, 0.242, 1), (63, 65, 0.242, 1), (76, 65, 0.242, 1), (89, 65, 0.242, 1), (102, 65, 0.242, 1),
              (61, 65, 0.3989, 1), (74, 65, 0.3989, 1), (87, 65, 0.3989, 1), (100, 65, 0.3989, 1), (113, 65, 0.3989, 1),\
              (72, 65, 0.242, 1), (85, 65, 0.242, 1), (98, 65, 0.242, 1), (111, 65, 0.242, 1), (124, 65, 0.242, 1),\
              (96, 65, 0.054, 1), (109, 65, 0.054, 1), (122, 65, 0.054, 1), (135, 65, 0.054, 1)]
    t = left_diag_connections(cam_res, 5, 5, stride, cam_res, weight, delay)
    assert sorted(result) == sorted(t)


def test_right_diagonal_connections():
    cam_res = 12
    stride = 2
    weight = 1
    delay = 1

    result = [(2, 65, 0.054, 1), (13, 65, 0.054, 1), (24, 65, 0.054, 1),\
              (4, 65, 0.242, 1), (15, 65, 0.242, 1), (26, 65, 0.242, 1), (37, 65, 0.242, 1), (48, 65, 0.242, 1),\
              (17, 65, 0.3989, 1), (28, 65, 0.3989, 1), (39, 65, 0.3989, 1), (50, 65, 0.3989, 1), (61, 65, 0.3989, 1),\
              (30, 65, 0.242, 1), (41, 65, 0.242, 1), (52, 65, 0.242, 1), (63, 65, 0.242, 1), (74, 65, 0.242, 1),\
              (43, 65, 0.054, 1), (54, 65, 0.054, 1), (65, 65, 0.054, 1), (76, 65, 0.054, 1), (87, 65, 0.054, 1),
              (56, 65, 0.242, 1), (67, 65, 0.242, 1), (78, 65, 0.242, 1), (89, 65, 0.242, 1), (100, 65, 0.242, 1),
              (69, 65, 0.3989, 1), (80, 65, 0.3989, 1), (91, 65, 0.3989, 1), (102, 65, 0.3989, 1), (113, 65, 0.3989, 1),\
              (82, 65, 0.242, 1), (93, 65, 0.242, 1), (104, 65, 0.242, 1), (115, 65, 0.242, 1), (126, 65, 0.242, 1),\
              (95, 65, 0.054, 1), (106, 65, 0.054, 1), (117, 65, 0.054, 1), (128, 65, 0.054, 1), (139, 65, 0.054, 1)]
    t = right_diag_connections(cam_res, 5, 5, stride, cam_res, weight, delay)
    assert sorted(result) == sorted(t)
